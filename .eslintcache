[{"C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\index.js":"1","C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\App.js":"2","C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\layout\\MainLayout.js":"3","C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\components\\Internal.js":"4"},{"size":220,"mtime":1607133523937,"results":"5","hashOfConfig":"6"},{"size":281,"mtime":1607161397269,"results":"7","hashOfConfig":"6"},{"size":1577,"mtime":1607169800734,"results":"8","hashOfConfig":"6"},{"size":4442,"mtime":1607169794716,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"13cn25k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\index.js",[],["21","22"],"C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\App.js",["23"],"import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css'\nimport MainLayout from './layout/MainLayout';\nimport Internal from './components/Internal';\n\n\nconst App = ()=>{\n\n  \n    return (\n   <Internal></Internal>\n    );\n  }\n\nexport default App","C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\layout\\MainLayout.js",[],"C:\\Users\\봉구네\\Documents\\project\\corona-app\\src\\components\\Internal.js",["24","25","26","27","28"],"import React, { useEffect, useState } from 'react'\r\nimport MainLayout from '../layout/MainLayout'\r\nimport {Bar , Doughnut,Line} from 'react-chartjs-2'\r\nconst Internal = () => {\r\n    const axios = require('axios').default;\r\n    const [confirmedData,setConfirmedData] = useState({})\r\n    const [quarantinedData,setQuarantinedData] = useState({})\r\n    const [comparedData,setComparedData] = useState({})\r\n    useEffect(()=>{\r\n        const fetechData = async () => {\r\n            try{\r\n           const res = await axios.get('https://api.covid19api.com/total/dayone/country/kr')\r\n             .then((response)=>{makeData(response.data)})\r\n            }catch(error){console.error(error)}\r\n\r\n        }\r\n        const makeData = (items)=> {\r\n            const arr = items.reduce((acc,cur)=>{\r\n                const currentDate = new Date(cur.Date);\r\n                const year = currentDate.getFullYear();\r\n                const month = currentDate.getMonth();\r\n                const date = currentDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered\r\n                \r\n                const findItem = acc.find( a=> a.year ===year && a.month === month)\r\n               \r\n                if(!findItem){\r\n                    acc.push({year,month,date,confirmed,active,death,recovered})\r\n                }\r\n               if(findItem && findItem.date < date){\r\n                   findItem.active = active;\r\n                   findItem.death = death;\r\n                   findItem.confirmed = confirmed;\r\n                   findItem.year = year;\r\n                   findItem.month = month;\r\n                   findItem.recovered = recovered;\r\n                   findItem.date = date;\r\n               }\r\n               \r\n                return acc;\r\n            },[])\r\n\r\n            const labels = arr.map(a=>`${a.month+1}월`)\r\n            setConfirmedData({\r\n                labels,\r\n                datasets:[\r\n                    {\r\n                        label:\"국내 누적 확진자\",\r\n                        backgroundColor:\"blue\",\r\n                        fill:true,\r\n                        data: arr.map(a=>a.confirmed)\r\n                    }\r\n                ]\r\n            })\r\n\r\n            setQuarantinedData({\r\n                labels,\r\n                datasets:[\r\n                    {\r\n                        label:\"월별 격리자 현황\",\r\n                        borderColor:\"blue\",\r\n                        fill:false,\r\n                        data: arr.map(a=>a.active)\r\n                    }\r\n                ]\r\n            })\r\n            const last = arr[arr.length-1]\r\n            setComparedData({\r\n                labels:[\"확진자\",\"격리해제\",\"사망\"],\r\n                datasets:[\r\n                    {\r\n                        label:\"누적 환진,해제,사망 비율\",\r\n                        backgroundColor:[\"#487eb0\",\"#e84118\",\"#192a56\"],\r\n                        fill:false,\r\n                        data: [last.confirmed,last.recovered,last.death]\r\n                    }\r\n                ]\r\n            })\r\n     \r\n        }\r\n        \r\n        fetechData()\r\n    },[])\r\n\r\n    return (\r\n\r\n        <MainLayout>\r\n        <h1>국내 코로나 현황</h1>\r\n            <div className=\"internal\">\r\n                <div className=\"internal-item\">\r\n                    <Bar data = {confirmedData} options={\r\n                        {title:{display:true,text:\"누적 확진자 추이\", fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n                <div className=\"internal-item\">\r\n                    <Line data = {quarantinedData} options={\r\n                        {title:{display:true,text:\"월별 격리자 현황\", fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n                <div className=\"internal-item\">\r\n                    <Doughnut data = {comparedData} options={\r\n                        {title:{display:true,text:`누적,확진,해제,사망(${new Date().getFullYear+1})`, fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n            </div>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default Internal\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":12,"column":18,"nodeType":"35","messageId":"36","endLine":12,"endColumn":21},{"ruleId":"38","severity":1,"message":"39","line":86,"column":7,"nodeType":"40","endLine":86,"endColumn":9,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":95,"column":77,"nodeType":"44","messageId":"45","endLine":95,"endColumn":78},{"ruleId":"42","severity":1,"message":"43","line":101,"column":77,"nodeType":"44","messageId":"45","endLine":101,"endColumn":78},{"ruleId":"42","severity":1,"message":"43","line":107,"column":108,"nodeType":"44","messageId":"45","endLine":107,"endColumn":109},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'MainLayout' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'axios'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [axios]",{"range":"51","text":"52"},[3182,3184],"[axios]"]
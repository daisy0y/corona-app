{"version":3,"sources":["layout/MainLayout.js","components/Internal.js","App.js","index.js"],"names":["Header","Layout","Sider","Content","MainLayout","children","useState","collapsed","setCollapsed","trigger","collapsible","className","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","style","padding","React","createElement","MenuUnfoldOutlined","onClick","margin","minHeight","Internal","axios","require","default","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetechData","a","get","then","response","makeData","data","console","error","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAUQA,G,OAA2BC,IAA3BD,QAAQE,EAAmBD,IAAnBC,MAAOC,EAAYF,IAAZE,QA0CRC,EAxCI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEAC,oBAAS,GAFT,mBAE1BC,EAF0B,KAEhBC,EAFgB,KAK/B,OACI,eAAC,IAAD,WACA,eAACN,EAAD,CAAOO,QAAS,KAAMC,aAAW,EAACH,UAAWA,EAA7C,UACE,qBAAKI,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACE,cAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACC,EAAA,EAAD,IAAzB,yDAAe,KAGf,cAAC,IAAKF,KAAN,CAAmBC,KAAM,cAACE,EAAA,EAAD,IAAzB,yDAAe,WAKnB,eAAC,IAAD,CAAQP,UAAU,cAAlB,UACE,cAACX,EAAD,CAAQW,UAAU,yBAAyBQ,MAAO,CAAEC,QAAS,GAA7D,SACGC,IAAMC,cAA4BC,IAAuC,CACxEZ,UAAW,UACXa,QAnBG,WAAOhB,GAAcD,QAsB5B,cAACJ,EAAD,CACEQ,UAAU,yBACVQ,MAAO,CACLM,OAAQ,YACRL,QAAS,GACTM,UAAW,KALf,SAQErB,W,kCCsEGsB,EAhHE,WACb,IAAMC,EAAQC,EAAQ,KAASC,QADZ,EAEsBxB,mBAAS,IAF/B,mBAEZyB,EAFY,KAEEC,EAFF,OAG0B1B,mBAAS,IAHnC,mBAGZ2B,EAHY,KAGIC,EAHJ,OAIoB5B,mBAAS,IAJ7B,mBAIZ6B,EAJY,KAICC,EAJD,KAoFnB,OA/EAC,qBAAU,WACN,IAAMC,EAAU,uCAAG,sBAAAC,EAAA,+EAEEX,EAAMY,IAAI,sDACzBC,MAAK,SAACC,GAAYC,EAASD,EAASE,SAHvB,6DAIDC,QAAQC,MAAR,MAJC,wDAAH,qDAOVH,EAAW,SAACI,GACd,IAAMC,EAAMD,EAAME,QAAO,SAACC,EAAIC,GAC1B,IAAMC,EAAc,IAAIC,KAAKF,EAAIE,MAC3BC,EAAOF,EAAYG,cACnBC,EAAQJ,EAAYK,WACpBC,EAAON,EAAYO,UACnBC,EAAYT,EAAIU,UAChBC,EAASX,EAAIY,OACbC,EAAQb,EAAIc,OACZC,EAAYf,EAAIgB,UAEhBC,EAAWlB,EAAImB,MAAM,SAAA9B,GAAC,OAAGA,EAAEe,OAAQA,GAAQf,EAAEiB,QAAUA,KAe7D,OAbIY,GACAlB,EAAIoB,KAAK,CAAChB,OAAKE,QAAME,OAAKE,YAAUE,SAAOE,QAAME,cAEnDE,GAAYA,EAASV,KAAOA,IAC3BU,EAASN,OAASA,EAClBM,EAASJ,MAAQA,EACjBI,EAASR,UAAYA,EACrBQ,EAASd,KAAOA,EAChBc,EAASZ,MAAQA,EACjBY,EAASF,UAAYA,EACrBE,EAASV,KAAOA,GAGZR,IACT,IAEIqB,EAASvB,EAAIwB,KAAI,SAAAjC,GAAC,gBAAKA,EAAEiB,MAAM,EAAb,aACxBxB,EAAiB,CACbuC,SACAE,SAAS,CACL,CACIC,MAAM,+CACNC,gBAAgB,OAChBC,MAAK,EACLhC,KAAMI,EAAIwB,KAAI,SAAAjC,GAAC,OAAEA,EAAEqB,iBAK/B1B,EAAmB,CACfqC,SACAE,SAAS,CACL,CACIC,MAAM,+CACNG,YAAY,OACZD,MAAK,EACLhC,KAAMI,EAAIwB,KAAI,SAAAjC,GAAC,OAAEA,EAAEuB,cAI/B,IAAMgB,EAAO9B,EAAIA,EAAI+B,OAAO,GAC5B3C,EAAgB,CACZmC,OAAO,CAAC,qBAAM,2BAAO,gBACrBE,SAAS,CACL,CACIC,MAAM,mEACNC,gBAAgB,CAAC,UAAU,UAAU,WACrCC,MAAK,EACLhC,KAAM,CAACkC,EAAKlB,UAAUkB,EAAKZ,UAAUY,EAAKd,YAO1D1B,MACF,IAIE,eAAC,EAAD,WACA,8EACI,sBAAK3B,UAAU,WAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,MAAD,CAAKiC,KAAQb,EAAeiD,QAE5B,CAACC,OAAO,CAACC,SAAQ,EAAMC,SAAU,eAGrC,qBAAKxE,UAAU,gBAAf,SACI,cAAC,OAAD,CAAMiC,KAAQX,EAAiB+C,QAE/B,CAACC,OAAO,CAACC,SAAQ,EAAMC,SAAU,eAGrC,qBAAKxE,UAAU,gBAAf,SACI,cAAC,WAAD,CAAUiC,KAAQT,EAAc6C,SACF,uDAAD,QAAgB,IAAI3B,MAAOE,YAAY,EAAvC,KAC7B,CAAC0B,OAAO,CAACC,SAAQ,EAAMC,SAAU,uBC3FtCC,EARH,WAGR,OACD,cAAC,EAAD,KCPHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4792c2d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst MainLayout = ({children}) => {\r\n    \r\n  const [collapsed,setCollapsed] = useState(false)\r\n  const toggle = () => {setCollapsed(!collapsed)};\r\n\r\n    return (\r\n        <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n              국내 코로나 현황\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              해외 코로나 현황\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement({collapsed} ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n          </Header>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n           {children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n}\r\n\r\nexport default MainLayout\r\n","import React, { useEffect, useState } from 'react'\r\nimport MainLayout from '../layout/MainLayout'\r\nimport {Bar , Doughnut,Line} from 'react-chartjs-2'\r\nconst Internal = () => {\r\n    const axios = require('axios').default;\r\n    const [confirmedData,setConfirmedData] = useState({})\r\n    const [quarantinedData,setQuarantinedData] = useState({})\r\n    const [comparedData,setComparedData] = useState({})\r\n    useEffect(()=>{\r\n        const fetechData = async () => {\r\n            try{\r\n           const res = await axios.get('https://api.covid19api.com/total/dayone/country/kr')\r\n             .then((response)=>{makeData(response.data)})\r\n            }catch(error){console.error(error)}\r\n\r\n        }\r\n        const makeData = (items)=> {\r\n            const arr = items.reduce((acc,cur)=>{\r\n                const currentDate = new Date(cur.Date);\r\n                const year = currentDate.getFullYear();\r\n                const month = currentDate.getMonth();\r\n                const date = currentDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered\r\n                \r\n                const findItem = acc.find( a=> a.year ===year && a.month === month)\r\n               \r\n                if(!findItem){\r\n                    acc.push({year,month,date,confirmed,active,death,recovered})\r\n                }\r\n               if(findItem && findItem.date < date){\r\n                   findItem.active = active;\r\n                   findItem.death = death;\r\n                   findItem.confirmed = confirmed;\r\n                   findItem.year = year;\r\n                   findItem.month = month;\r\n                   findItem.recovered = recovered;\r\n                   findItem.date = date;\r\n               }\r\n               \r\n                return acc;\r\n            },[])\r\n\r\n            const labels = arr.map(a=>`${a.month+1}월`)\r\n            setConfirmedData({\r\n                labels,\r\n                datasets:[\r\n                    {\r\n                        label:\"국내 누적 확진자\",\r\n                        backgroundColor:\"blue\",\r\n                        fill:true,\r\n                        data: arr.map(a=>a.confirmed)\r\n                    }\r\n                ]\r\n            })\r\n\r\n            setQuarantinedData({\r\n                labels,\r\n                datasets:[\r\n                    {\r\n                        label:\"월별 격리자 현황\",\r\n                        borderColor:\"blue\",\r\n                        fill:false,\r\n                        data: arr.map(a=>a.active)\r\n                    }\r\n                ]\r\n            })\r\n            const last = arr[arr.length-1]\r\n            setComparedData({\r\n                labels:[\"확진자\",\"격리해제\",\"사망\"],\r\n                datasets:[\r\n                    {\r\n                        label:\"누적 환진,해제,사망 비율\",\r\n                        backgroundColor:[\"#487eb0\",\"#e84118\",\"#192a56\"],\r\n                        fill:false,\r\n                        data: [last.confirmed,last.recovered,last.death]\r\n                    }\r\n                ]\r\n            })\r\n     \r\n        }\r\n        \r\n        fetechData()\r\n    },[])\r\n\r\n    return (\r\n\r\n        <MainLayout>\r\n        <h1>국내 코로나 현황</h1>\r\n            <div className=\"internal\">\r\n                <div className=\"internal-item\">\r\n                    <Bar data = {confirmedData} options={\r\n                        {title:{display:true,text:\"누적 확진자 추이\", fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n                <div className=\"internal-item\">\r\n                    <Line data = {quarantinedData} options={\r\n                        {title:{display:true,text:\"월별 격리자 현황\", fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n                <div className=\"internal-item\">\r\n                    <Doughnut data = {comparedData} options={\r\n                        {title:{display:true,text:`누적,확진,해제,사망(${new Date().getFullYear+1})`, fontSize:16}},\r\n                    {legend:{display:true, position: \"bottom\"}}\r\n                    }/>\r\n                </div>\r\n            </div>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default Internal\r\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css'\nimport MainLayout from './layout/MainLayout';\nimport Internal from './components/Internal';\n\n\nconst App = ()=>{\n\n  \n    return (\n   <Internal></Internal>\n    );\n  }\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}